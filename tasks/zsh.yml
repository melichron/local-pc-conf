- name: install packages for zsh
  package:
    name: "{{ item }}"
    state: latest
  loop:
    - "zsh"
    - "powerline"
    - "git"
    - "python3-pygments"
  become: true

- name: install Oh My Zsh is not present
  shell: test -d "/etc/skel/.oh-my-zsh/" || sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh && mkdir /etc/skel/.oh-my-zsh && cp -pr /root/.oh-my-zsh/* /etc/skel/.oh-my-zsh/)"
  # args:
  #   executable: /bin/sh
  ignore_errors: true
  become: true
  register: ohmyzshinstall_root

- name: Synchronization
  synchronize:
    src: /root/.oh-my-zsh
    dest: /etc/skel
  become: true
  register: ohmyzshinstall
  when: ohmyzshinstall_root is success

- name: copy default .zshrc
  copy:
    src: zshrc
    dest: "/etc/skel/.zshrc"
  when: ohmyzshinstall is success
  become: true
  register: copyzshrc

- name: clone powerlevel10k repo
  git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: "/etc/skel/.oh-my-zsh/custom/themes/powerlevel10k"
  become: true
  when: ohmyzshinstall is success
  register: powerlevel10krepo

- name: ensure completions and functions dir
  file:
    path: "/etc/skel/.oh-my-zsh/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "completions"
    - "functions"
  become: true
  register: zsh_dirs
  when: ohmyzshinstall is success

- name: clone zsh-autosuggestions repo
  git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions"
    dest: "/etc/skel/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  become: true
  when: ohmyzshinstall is success
  register: zsh_autosuggestions

- name: ensure powerlevel10k theme settings file
  copy:
    src: p10k.zsh
    dest: "/etc/skel/.p10k.zsh"
  become: true
  when: powerlevel10krepo is success

- name: ensure powerlevel10k sourcing
  blockinfile:
    path: "/etc/skel/.zshrc"
    backup: no
    insertafter: BOF
    marker: "# {mark} powerlevel10k sourcing Block"
    state: present
    block: |
      if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
        source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
      fi
  become: true
  when: copyzshrc is success

- name: ensure powerlevel10k sourcing
  blockinfile:
    path: "/etc/skel/.zshrc"
    backup: no
    insertafter: EOF
    marker: "# {mark} powerlevel10k sourcing Block"
    state: present
    block: |
      # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
      [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
  become: true
  when: ohmyzshinstall

- name: ensure aliases
  blockinfile:
    path: "/etc/skel/.zshrc"
    backup: no
    insertafter: "# Example aliases"
    marker: "# {mark} ZSH aliases Block"
    state: present
    block: |
      alias nullrepo='git add . && git stash && git stash drop'
      alias ap='ansible-playbook'
      alias ccat='pygmentize -g'
      alias showcert='openssl x509 -text -noout -in '
      alias xx='sudo -s'
      alias ..="cd .."
      alias ...="cd ../../"
      alias gtc='git add . && git commit -m "`curl -s http://whatthecommit.com/index.txt`" && git push'
      alias gsv='git status -vv'
      alias cgd='if git rev-parse --is-inside-work-tree --quiet >/dev/null 2>/dev/null; then cd $(git rev-parse --show-toplevel); else echo "Not in Git repository!"; fi'
  become: true
  when: copyzshrc is success
